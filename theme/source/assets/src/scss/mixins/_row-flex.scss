// Row flex
%row-flex,
.row-flex {
    display: flex;
    justify-content: center;
    max-width: $site-max-width; // max width according to foundation
    margin: 0 auto;
    &--space-between {
        justify-content: space-between;
    }
    &--wrap {
        flex-wrap: wrap;
    }
    &--flex-start {
        justify-content: flex-start;
    }
    &--space-around {
        justify-content: space-around;
    }
    &--minus-margin-1 {
        @include rem-fallback(margin-left, -1);
        @include rem-fallback(margin-right, -1);
        @media #{ $small-only } {
            @include rem-fallback(margin, 0);
        }
    }
    &--minus-margin-08 {
        @include rem-fallback(margin-left, -0.8);
        @include rem-fallback(margin-right, -0.8);
        @media #{ $small-only } {
            @include rem-fallback(margin, 0);
        }
    }
    @media #{ $small-only } {
        display: table;
        width: 100%
    }
    &--3cols {
        & > * {
            width: calc(100%/3);
            @media #{ $small-only } {
                width: 100%;
            }
        }
    }
}

.no-flexbox %row-flex {
    display: table;
    width: 100%;
    & > * {
        display: inline-block;
    }
}

@mixin o-row-flex($include-cols:no, $cols:12, $grid-gutter:.8rem) {
    display: flex;
    justify-content: center;
    max-width: $site-max-width; // max width according to foundation file
    margin: 0 auto;
    &--space-between {
        justify-content: space-between;
    }
    &--wrap {
        flex-wrap: wrap;
    }
    &--flex-start {
        justify-content: flex-start;
    }
    &--minus-margin-08 {
        @include rem-fallback(margin-left, -0.8);
        @include rem-fallback(margin-right, -0.8);
        @media #{ $small-only } {
            @include rem-fallback(margin, 0);
        }
    }
    &--space-around {
        justify-content: space-around;
    }
    @media #{ $small-only } {
        display: table;
        width: 100%
    }
    // @if $include-cols==yes {
    //     @for $i from 1 through length($cols) {
    //         &__col-#{$i} {
    //             $multiplier: $i / $cols;
    //             width: calc(100% * #{$multiplier} - #{$grid-gutter} * (1 - #{$multiplier}));
    //         }
    //     }
    // }
}